{"version":3,"sources":["services/fetchApiPlayers.ts","components/BasicCard/index.tsx","components/PlayerCards/index.tsx","pages/Equipos/index.tsx","components/TabPanel/index.tsx","pages/Jugadores/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ApiUrl","process","ApiKey","messageError","error","message","data","fetchApiPlayers","a","page","axios","get","fetchApiTeam","name","post","headers","Authorization","BasicCard","props","label","title","description","Card","sx","minWidth","variant","CardContent","Typography","fontSize","color","gutterBottom","component","mt","CardActions","Button","size","defaultProps","PlayerCard","list","Grid","id","container","spacing","xs","md","columns","sm","map","item","equipo","nombre","posicion","Math","floor","random","index","useState","loading","setLoading","undefined","teamName","setTeamName","players","setPlayers","setPage","totalPagesApi","setTotalPages","handlePaginator","num","window","scrollTo","useEffect","totalPages","Box","display","alignItems","justifyContent","marginTop","marginBottom","TextField","fullWidth","value","onChange","e","target","width","lg","pb","mx","LinearProgress","length","direction","padding","onClick","TabPanel","children","other","role","hidden","p","dir","Jugadores","disabled","boxShadow","height","backgroundColor","App","theme","useTheme","setValue","a11yProps","AppBar","className","position","Tabs","event","newValue","textColor","indicatorColor","centered","Tab","Container","axis","onChangeIndex","Equipos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af5da4f7.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst ApiUrl = process.env.REACT_APP_API_URL ?? ''\nconst ApiKey = process.env.REACT_APP_API_KEY ?? ''\n\nconst messageError = (error: any) => ({\n  message: 'Error fetching players',\n  error,\n  data: null,\n})\n\nexport const fetchApiPlayers = async (page: number | string = 1): Promise<any> => {\n  try {\n    const { data } = await axios.get(`${ApiUrl}/players?page=${page}`)\n    return data\n  } catch (error) {\n    return messageError(error)\n  }\n}\n\nexport const fetchApiPlayer = async (id: number | string): Promise<any> => {\n  try {\n    const response = await axios.get(`${ApiUrl}/players/${id}`)\n    return response\n  } catch (error) {\n    return messageError(error)\n  }\n}\n\nexport const fetchApiTeam = async (name: string, page: number | string = 1) => {\n  try {\n    const { data } = await axios.post(\n      `${ApiUrl}/team`,\n      { name, page },\n      {\n        headers: {\n          Authorization: ApiKey,\n        },\n      }\n    )\n    return data\n  } catch (error) {\n    return messageError(error)\n  }\n}\n","import { Button, Card, CardActions, CardContent, Typography } from '@mui/material'\n\ntype BasicCardProps = {\n  label?: string\n  title: string\n  description: string\n}\n\nconst BasicCard = (props: BasicCardProps) => {\n  const { label, title, description } = props\n\n  return (\n    <Card sx={{ minWidth: 275 }} variant=\"outlined\">\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {label}\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {title}\n        </Typography>\n        <Typography sx={{ mt: 1.5 }} variant=\"body2\">\n          {description}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Ver detalles</Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nBasicCard.defaultProps = {\n  label: '',\n}\n\nexport default BasicCard\n","import { Grid } from '@mui/material'\nimport BasicCard from '../BasicCard'\n\ntype PlayerCardProps = {\n  list: Array<any>\n}\n\nconst PlayerCard = (props: PlayerCardProps) => {\n  const { list } = props\n\n  return (\n    <Grid id=\"cards-container\" container spacing={{ xs: 2, md: 3 }} columns={{ xs: 1, sm: 8, md: 12 }}>\n      {list.map((item) => (\n        <Grid item xs={2} sm={4} md={4} key={`${item.id}-${Math.floor(Math.random() * 99999) + 1}`}>\n          <BasicCard label={item.equipo} title={item.nombre} description={item.posicion} />\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nexport default PlayerCard\n","import { Box } from '@mui/system'\nimport { Button, Grid, LinearProgress, TextField, Typography } from '@mui/material'\nimport { ChangeEvent, useEffect, useState } from 'react'\nimport { fetchApiTeam } from 'services/fetchApiPlayers'\nimport PlayerCard from '../../components/PlayerCards'\n\nconst index = () => {\n  const [loading, setLoading] = useState(false)\n  const [teamName, setTeamName] = useState<string | undefined>(undefined)\n  const [players, setPlayers] = useState<any>([])\n  const [page, setPage] = useState(1)\n  const [totalPagesApi, setTotalPages] = useState(1)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => setTeamName(e.target.value)\n\n  const handlePaginator = (num: number) => {\n    if (page + num > 0 && page + num <= totalPagesApi) {\n      setPage(page + num)\n      window.scrollTo(0, 85)\n    }\n  }\n\n  useEffect(() => {\n    ;(async () => {\n      setLoading(true)\n      if (teamName) {\n        const { totalPages, data } = await fetchApiTeam(teamName, page)\n        if (data && totalPages) {\n          setPlayers(data)\n          setTotalPages(totalPages)\n        } else setPlayers([])\n      }\n      setLoading(false)\n    })()\n    return () => {}\n  }, [teamName, page])\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" marginTop={2} marginBottom={3}>\n        <TextField\n          fullWidth\n          label=\"Equipo\"\n          id=\"input-text-equipo\"\n          size=\"small\"\n          value={teamName}\n          onChange={handleChange}\n          sx={{\n            width: {\n              xs: 500,\n              sm: 400,\n              md: 500,\n              lg: 600,\n              pb: 3,\n            },\n            mx: 'auto',\n          }}\n        />\n      </Box>\n      {loading && <LinearProgress />}\n\n      {!teamName ? (\n        <Typography>Realiza una búsqueda por nombre de equipo.</Typography>\n      ) : (\n        !loading &&\n        teamName &&\n        players.length === 0 && <Typography>No se encontraron jugadores en el equipo {teamName}.</Typography>\n      )}\n\n      <PlayerCard list={players} />\n      {players.length > 0 && (\n        <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\" spacing={1} padding={3}>\n          <Grid item>\n            {page > 1 && (\n              <Button onClick={() => handlePaginator(-1)} size=\"small\">\n                Pagina anterior\n              </Button>\n            )}\n          </Grid>\n          <Grid item>\n            {page < totalPagesApi && (\n              <Button onClick={() => handlePaginator(+1)} size=\"small\">\n                Pagina siguiente\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default index\n","import { Box } from '@mui/material'\nimport { ReactNode } from 'react'\n\ntype TabPanelProps = {\n  children: ReactNode\n  dir?: string\n  index: number\n  value: number\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`tabpanel-${index}`} aria-labelledby={`tab-${index}`} {...other}>\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  )\n}\n\nTabPanel.defaultProps = {\n  dir: null,\n}\n\nexport default TabPanel\n","import PlayerCard from 'components/PlayerCards'\nimport { Box } from '@mui/system'\nimport { Button, LinearProgress } from '@mui/material'\nimport { fetchApiPlayers } from 'services/fetchApiPlayers'\nimport { useEffect, useState } from 'react'\n\nconst Jugadores = () => {\n  const [loading, setLoading] = useState(false)\n  const [page, setPage] = useState(1)\n  const [players, setPlayers] = useState<any>([])\n\n  useEffect(() => {\n    ;(async () => {\n      setLoading(true)\n      const { data } = await fetchApiPlayers(page)\n      setPlayers((p: any) => [...p, ...data])\n      setLoading(false)\n    })()\n  }, [page])\n\n  return (\n    <>\n      <PlayerCard list={players} />\n      {loading && (\n        <Box marginBottom={3} marginTop={3}>\n          <LinearProgress />\n        </Box>\n      )}\n      <Box display=\"flex\" marginTop={2} alignItems=\"center\" justifyContent=\"center\">\n        <Button\n          disabled={loading}\n          onClick={() => setPage(page + 1)}\n          size=\"small\"\n          fullWidth\n          sx={{ boxShadow: 5, height: 70, backgroundColor: '#c8e4fb' }}\n        >\n          Mostrar más\n        </Button>\n      </Box>\n    </>\n  )\n}\n\nexport default Jugadores\n","import { Container, Tabs, Tab, AppBar } from '@mui/material'\nimport { SyntheticEvent, useState } from 'react'\nimport { useTheme } from '@mui/material/styles'\nimport SwipeableViews from 'react-swipeable-views'\nimport Equipos from './pages/Equipos'\nimport TabPanel from './components/TabPanel'\nimport Jugadores from './pages/Jugadores'\n\nconst App = () => {\n  const theme = useTheme()\n  const [value, setValue] = useState(0)\n\n  const a11yProps = (index: number) => ({\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  })\n\n  const handleChange = (event: SyntheticEvent, newValue: number) => setValue(newValue)\n\n  const handleChangeIndex = (index: number) => setValue(index)\n\n  return (\n    <>\n      <AppBar className=\"nav-bar\" color=\"inherit\" position=\"fixed\">\n        <Tabs value={value} onChange={handleChange} textColor=\"primary\" indicatorColor=\"primary\" centered>\n          <Tab label=\"Lista de jugadores\" {...a11yProps(0)} />\n          <Tab label=\"Búsqueda de equipos\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <Container>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel value={value} index={0} dir={theme.direction}>\n            <Jugadores />\n          </TabPanel>\n          <TabPanel value={value} index={1} dir={theme.direction}>\n            <Equipos />\n          </TabPanel>\n        </SwipeableViews>\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}